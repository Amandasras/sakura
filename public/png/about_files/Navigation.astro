const hamburger = document.querySelector(".hamburger");
const menu = document.querySelector(".menu");
hamburger.addEventListener("click", () => {
  menu.classList.toggle("active");
});
const countdown = () => {
  const countDate = new Date("April 22, 2023 11:00:00");
  const now = new Date().getTime();
  const remainingTime = countDate - now;
  const second = 1e3;
  const minute = second * 60;
  const hour = minute * 60;
  const day = hour * 24;
  const textDay = Math.floor(remainingTime / day);
  const textHour = Math.floor(remainingTime % day / hour);
  const textMinute = Math.floor(remainingTime % hour / minute);
  const textSecond = Math.floor(remainingTime % minute / second);
  document.querySelector(".day").innerHTML = textDay > 0 ? textDay : 0;
  document.querySelector(".hour").innerHTML = textHour > 0 ? textHour : 0;
  document.querySelector(".minute").innerHTML = textMinute > 0 ? textMinute : 0;
  document.querySelector(".second").innerHTML = textSecond > 0 ? textSecond : 0;
};
setInterval(countdown, 500);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rcmlzdGluZWtyYXVzZS9EZXNrdG9wL01NRDIvVEVNQSA4L3Nha3VyYS9zcmMvY29tcG9uZW50cy9OYXZpZ2F0aW9uLmFzdHJvIl0sInNvdXJjZXNDb250ZW50IjpbIi0tLVxuaW1wb3J0IFwiLi4vc3R5bGVzL3N0eWxlMi5jc3NcIjtcbi0tLVxuXG48aGVhZGVyPlxuICA8bGkgY2xhc3M9XCJsb2dvXCI+XG4gICAgPGEgaHJlZj1cIi9pbmRleFwiPjxpbWcgc3JjPVwiLi4vbG9nby5wbmdcIiBhbHQ9XCJsb2dvXCIgLz48L2E+XG4gICAgPGRpdiBjbGFzcz1cInRleHRcIj4yMi80IC0gMjMvNDwvZGl2PlxuICA8L2xpPlxuXG4gIDxidXR0b24gY2xhc3M9XCJoYW1idXJnZXJcIiBhcmlhLWxhYmVsPVwiVG9nZ2xlIE1lbnVcIj5cbiAgICA8c3Bhbj48L3NwYW4+XG4gICAgPHNwYW4+PC9zcGFuPlxuICAgIDxzcGFuPjwvc3Bhbj5cbiAgPC9idXR0b24+XG4gIDxuYXYgY2xhc3M9XCJtZW51XCI+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImNsb3NlLW1lbnVcIiBhcmlhLWxhYmVsPVwiQ2xvc2UgTWVudVwiPlxuICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgPHNwYW4+PC9zcGFuPlxuICAgIDwvYnV0dG9uPlxuICAgIDx1bCBjbGFzcz1cImxpbmtzXCI+XG4gICAgICA8bGk+PGEgaHJlZj1cIi9wcm9ncmFtLmFzdHJvXCI+UFJPR1JBTTwvYT48L2xpPlxuICAgICAgPGxpPjxhIGhyZWY9XCIveW91cnByb2dyYW0uYXN0cm9cIj5ZT1VSIFBST0dSQU08L2E+PC9saT5cbiAgICAgIDxsaT48YSBocmVmPVwiL2Fib3V0LmFzdHJvXCI+QUJPVVQgVVM8L2E+PC9saT5cbiAgICAgIDxsaT48YSBocmVmPVwiI1wiPk5BVklHQVRJT048L2E+PC9saT5cbiAgICAgIDxsaT48YSBocmVmPVwiI1wiPkJFQ09NRSBBIFZPTFVOVEVFUjwvYT48L2xpPlxuICAgIDwvdWw+XG4gIDwvbmF2PlxuPC9oZWFkZXI+XG48Ym9keT5cbiAgPCEtLSA8c2VjdGlvbiBjbGFzcz1cImNvbWluZy1zb29uXCI+IC0tPlxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY291bnRkb3duXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZGF5XCI+XG4gICAgICAgICAgPGgzIGNsYXNzPVwiZGF5XCI+PC9oMz5cbiAgICAgICAgICA8aDM+RDwvaDM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLWhvdXJcIj5cbiAgICAgICAgICA8aDMgY2xhc3M9XCJob3VyXCI+PC9oMz5cbiAgICAgICAgICA8aDM+SDwvaDM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLW1pbnV0ZVwiPlxuICAgICAgICAgIDxoMyBjbGFzcz1cIm1pbnV0ZVwiPjwvaDM+XG4gICAgICAgICAgPGgzPk08L2gzPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1zZWNvbmRcIj5cbiAgICAgICAgICA8aDMgY2xhc3M9XCJzZWNvbmRcIj48L2gzPlxuICAgICAgICAgIDxoMz5TPC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPCEtLSA8L3NlY3Rpb24+IC0tPlxuPC9ib2R5PlxuXG48c3R5bGU+XG4gIC5sb2dvIHtcbiAgICBqdXN0aWZ5LXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgd2lkdGg6IDRyZW07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWY1ZjQ7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBcbiAgfVxuICAudGV4dCB7XG4gICBjb2xvcjogYmxhY2s7XG4gICBmb250LWZhbWlseTogam9zdDtcbiAgIGRpc3BsYXk6IGZsZXg7XG4gICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICBtYXJnaW4tbGVmdDogOTBweDtcbiAgIG1hcmdpbi10b3A6IC00LjZlbTtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICB9XG4gIGhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIH1cblxuICAuaGFtYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogMi41cmVtO1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyAvKiBBZGQgdGhpcyBsaW5lICovXG4gICAgei1pbmRleDogMjsgLyogQWRkIHRoaXMgbGluZSAqL1xuICB9XG5cbiAgLmhhbWJ1cmdlciBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIH1cblxuICAubWVudSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB6LWluZGV4OiAxO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5ZjFkMWQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICB9XG5cbiAgLm1lbnUuYWN0aXZlIHtcbiAgICB6LWluZGV4OiAxO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgfVxuXG4gIC5jbG9zZS1tZW51IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAycmVtO1xuICAgIHJpZ2h0OiAycmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAycmVtO1xuICAgIGhlaWdodDogMS41cmVtO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB6LWluZGV4OiAzO1xuICB9XG5cbiAgLmxpbmtzIHtcbiAgICBmb250LWZhbWlseTogSm9zdDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHotaW5kZXg6IDI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxuXG4gIC5saW5rcyBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgfVxuICBsaSBhOmhvdmVyIHtcbiAgICBjb2xvcjogcmdiKDEwNiwgMTAsIDEwKTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICB9XG5cbiAgLmxpbmtzIGEge1xuICAgIGNvbG9yOiAjZmVmNWY0O1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICAqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuYm9keSB7XG4gICAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtcbn1cbmgzIHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC1mYW1pbHk6IGpvc3Q7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtcbiAgICBcbn1cbi5jb3VudGRvd24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMSU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogOTVweDtcbiAgICBtYXJnaW4tdG9wOiAtMyU7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbn1cbi5kYXksXG4uaG91cixcbi5taW51dGUsIFxuLnNlY29uZCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIG1hcmdpbi1yaWdodDogM3JlbTtcbiAgICBcbn1cbi53YWl0aW5nIHtcbiAgICBoZWlnaHQ6IDUwdmg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwMHB4KXtcbiAgLmNvdW50ZG93biB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIG1hcmdpbi10b3A6IC03JTtcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xuICB9XG4gIC5saW5rcyBhIHtcbiAgICBjb2xvcjogI2ZlZjVmNDtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIH1cbi5saW5rcyB7XG4gIG1hcmdpbi10b3A6IDUlO1xufVxuICBcbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBtYXJnaW4tbGVmdDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAtMTAlO1xuICB9XG4gIC5sb2dvIHtcbiAgICB3aWR0aDogMTElO1xuICAgIG1hcmdpbi1sZWZ0OiAtNSU7XG4gICAgbWFyZ2luLXRvcDogLTYlO1xuICB9XG4gIC50ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogMjAwJTtcbiAgICBmb250LXNpemU6IDAuN3JlbTtcbiAgfVxuLmRheSxcbi5ob3VyLFxuLm1pbnV0ZSwgXG4uc2Vjb25kIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAxMTAlO1xuICAgIFxufVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTAwcHgpe1xuICAuY291bnRkb3duIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgbWFyZ2luLXRvcDogLTUlO1xuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gIH1cbiAgLmxpbmtzIGEge1xuICAgIGNvbG9yOiAjZmVmNWY0O1xuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4ubGlua3Mge1xuICBtYXJnaW4tdG9wOiA2JTtcbn1cbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBtYXJnaW4tbGVmdDogODAlO1xuICB9XG4gIC5sb2dvIHtcbiAgICB3aWR0aDoxMiU7XG4gICAgbWFyZ2luLWxlZnQ6IC02JTtcbiAgICBtYXJnaW4tdG9wOiAtNSU7XG4gIH1cbiAgLnRleHQge1xuICAgIG1hcmdpbi1sZWZ0OiAxOTAlO1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICB9XG4uZGF5LFxuLmhvdXIsXG4ubWludXRlLCBcbi5zZWNvbmQge1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDg1JTtcbiAgICBcbn1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KXtcbiAgLmNvdW50ZG93biB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIG1hcmdpbi10b3A6IC00JTtcbiAgICBtYXJnaW4tbGVmdDogOSU7XG4gIH1cbiAgLmxpbmtzIGEge1xuICAgIGNvbG9yOiAjZmVmNWY0O1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuLmxpbmtzIHtcbiAgbWFyZ2luLXRvcDogNSU7XG59XG4gIGgzIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gIH1cbiAgLmxvZ28ge1xuICAgIHdpZHRoOjEwJTtcbiAgICBtYXJnaW4tbGVmdDogLTMlO1xuICAgIG1hcmdpbi10b3A6IC0zJTtcbiAgfVxuICAudGV4dCB7XG4gICAgbWFyZ2luLWxlZnQ6IDE3MCU7XG4gIH1cbi5kYXksXG4uaG91cixcbi5taW51dGUsIFxuLnNlY29uZCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1yaWdodDogMS44cmVtO1xuICAgIFxufVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTAwcHgpe1xuICAuY291bnRkb3duIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLXRvcDogLTMlO1xuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gIH1cbiAgLmxpbmtzIGEge1xuICAgIGNvbG9yOiAjZmVmNWY0O1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuLmxpbmtzIHtcbiAgbWFyZ2luLXRvcDogNyU7XG59XG4gIGgzIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbiAgLmxvZ28ge1xuICAgIHdpZHRoOjglO1xuICAgIG1hcmdpbi1sZWZ0OiAtMSU7XG4gICAgbWFyZ2luLXRvcDogLTElO1xuICB9XG4gIC50ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogMTkwJTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbi5kYXksXG4uaG91cixcbi5taW51dGUsIFxuLnNlY29uZCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1yaWdodDogMS44cmVtO1xuICAgIFxufVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KXtcbiAgLmNvdW50ZG93biB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IC0zJTtcbiAgICBtYXJnaW4tbGVmdDogMTMlO1xuICB9XG4gIC5saW5rcyBhIHtcbiAgICBjb2xvcjogI2ZlZjVmNDtcbiAgICBmb250LXNpemU6IDMuNXJlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuLmxpbmtzIHtcbiAgbWFyZ2luLXRvcDogNSU7XG59XG4gIGgzIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbiAgLmxvZ28ge1xuICAgIHdpZHRoOjklO1xuICAgIG1hcmdpbi1sZWZ0OiAtMSU7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gIH1cbiAgLnRleHQge1xuICAgIG1hcmdpbi1sZWZ0OiAxNjQlO1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgfVxuLmRheSxcbi5ob3VyLFxuLm1pbnV0ZSwgXG4uc2Vjb25kIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjhyZW07XG4gICAgcGFkZGluZzogNXB4O1xufVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwMHB4KXtcbiAgLmNvdW50ZG93biB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IC0zJTtcbiAgICBtYXJnaW4tbGVmdDogMTElO1xuICB9XG4gIC5saW5rcyBhIHtcbiAgICBjb2xvcjogI2ZlZjVmNDtcbiAgICBmb250LXNpemU6IDRyZW07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIH1cbi5saW5rcyB7XG4gIG1hcmdpbi10b3A6IDMlO1xufVxuICBoMyB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG4gIC5sb2dvIHtcbiAgICB3aWR0aDo3JTtcbiAgICBtYXJnaW4tbGVmdDogLTElO1xuICAgIG1hcmdpbi10b3A6IDAlO1xuICB9XG4gIC50ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogMTg4JTtcbiAgICBmb250LXNpemU6IDIzcHg7XG4gIH1cbi5kYXksXG4uaG91cixcbi5taW51dGUsIFxuLnNlY29uZCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0ODBweCl7XG4ubGlua3MgYSB7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xufVxufVxufVxuXG5cbjwvc3R5bGU+XG48c2NyaXB0PlxuICBjb25zdCBoYW1idXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhbWJ1cmdlclwiKTtcbiAgY29uc3QgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudVwiKTtcblxuICBoYW1idXJnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBtZW51LmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XG4gIH0pO1xuXG4gIGNvbnN0IGNvdW50ZG93biA9ICgpID0+IHtcbiAgICAvL2RhdGUgb2cgdGltZVxuICAgIGNvbnN0IGNvdW50RGF0ZSA9IG5ldyBEYXRlKFwiQXByaWwgMjIsIDIwMjMgMTE6MDA6MDBcIik7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbiAgICAvL3JlbWFpbmluZyB0aW1lXG4gICAgY29uc3QgcmVtYWluaW5nVGltZSA9IGNvdW50RGF0ZSAtIG5vdztcblxuICAgIC8vd29ya291dCB0aW1lIGluIGRheXMgZXRjXG4gICAgY29uc3Qgc2Vjb25kID0gMTAwMDtcbiAgICBjb25zdCBtaW51dGUgPSBzZWNvbmQgKiA2MDtcbiAgICBjb25zdCBob3VyID0gbWludXRlICogNjA7XG4gICAgY29uc3QgZGF5ID0gaG91ciAqIDI0O1xuXG4gICAgY29uc3QgdGV4dERheSA9IE1hdGguZmxvb3IocmVtYWluaW5nVGltZSAvIGRheSk7XG4gICAgY29uc3QgdGV4dEhvdXIgPSBNYXRoLmZsb29yKChyZW1haW5pbmdUaW1lICUgZGF5KSAvIGhvdXIpO1xuICAgIGNvbnN0IHRleHRNaW51dGUgPSBNYXRoLmZsb29yKChyZW1haW5pbmdUaW1lICUgaG91cikgLyBtaW51dGUpO1xuICAgIGNvbnN0IHRleHRTZWNvbmQgPSBNYXRoLmZsb29yKChyZW1haW5pbmdUaW1lICUgbWludXRlKSAvIHNlY29uZCk7XG5cbiAgICAvL2NoZWNrIHRoZSB0aW1lIGlzIHBhc3QgMFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGF5XCIpLmlubmVySFRNTCA9IHRleHREYXkgPiAwID8gdGV4dERheSA6IDA7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ob3VyXCIpLmlubmVySFRNTCA9IHRleHRIb3VyID4gMCA/IHRleHRIb3VyIDogMDtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1pbnV0ZVwiKS5pbm5lckhUTUwgPSB0ZXh0TWludXRlID4gMCA/IHRleHRNaW51dGUgOiAwO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2Vjb25kXCIpLmlubmVySFRNTCA9IHRleHRTZWNvbmQgPiAwID8gdGV4dFNlY29uZCA6IDA7XG4gIH1cblxuLy9ydW4gZXZlcnkgNTAwbXNcbnNldEludGVydmFsKGNvdW50ZG93biwgNTAwKTtcblxuPC9zY3JpcHQ+Il0sIm1hcHBpbmdzIjoiQUFtYkUsTUFBTSxZQUFZLFNBQVMsY0FBYyxZQUFZO0FBQ3JELE1BQU0sT0FBTyxTQUFTLGNBQWMsT0FBTztBQUUzQyxVQUFVLGlCQUFpQixTQUFTLE1BQU07QUFDeEMsT0FBSyxVQUFVLE9BQU8sUUFBUTtBQUNoQyxDQUFDO0FBRUQsTUFBTSxZQUFZLE1BQU07QUFFdEIsUUFBTSxZQUFZLElBQUksS0FBSyx5QkFBeUI7QUFDcEQsUUFBTSxNQUFNLElBQUksS0FBSyxFQUFFLFFBQVE7QUFHL0IsUUFBTSxnQkFBZ0IsWUFBWTtBQUdsQyxRQUFNLFNBQVM7QUFDZixRQUFNLFNBQVMsU0FBUztBQUN4QixRQUFNLE9BQU8sU0FBUztBQUN0QixRQUFNLE1BQU0sT0FBTztBQUVuQixRQUFNLFVBQVUsS0FBSyxNQUFNLGdCQUFnQixHQUFHO0FBQzlDLFFBQU0sV0FBVyxLQUFLLE1BQU8sZ0JBQWdCLE1BQU8sSUFBSTtBQUN4RCxRQUFNLGFBQWEsS0FBSyxNQUFPLGdCQUFnQixPQUFRLE1BQU07QUFDN0QsUUFBTSxhQUFhLEtBQUssTUFBTyxnQkFBZ0IsU0FBVSxNQUFNO0FBRy9ELFdBQVMsY0FBYyxNQUFNLEVBQUUsWUFBWSxVQUFVLElBQUksVUFBVTtBQUNuRSxXQUFTLGNBQWMsT0FBTyxFQUFFLFlBQVksV0FBVyxJQUFJLFdBQVc7QUFDdEUsV0FBUyxjQUFjLFNBQVMsRUFBRSxZQUFZLGFBQWEsSUFBSSxhQUFhO0FBQzVFLFdBQVMsY0FBYyxTQUFTLEVBQUUsWUFBWSxhQUFhLElBQUksYUFBYTtBQUM5RTtBQUdGLFlBQVksV0FBVyxHQUFHOyIsIm5hbWVzIjpbXX0=